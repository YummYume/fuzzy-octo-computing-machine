version: '3.3'

services:
  react-service:
    build:
      context: .
      dockerfile: ./docker/node/Dockerfile
    restart: unless-stopped
    container_name: react-cnt
    stdin_open: true
    command: sh -c "yarn install && yarn dev"
    working_dir: /app
    ports:
      - "3000:5000"
    volumes:
      - "./app/react:/app"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.react.rule=Host(`react.docker-app.fr`)"
      - "traefik.http.routers.react.entrypoints=web"

  node-service:
    build:
      context: .
      dockerfile: ./docker/node/Dockerfile
    restart: unless-stopped
    container_name: node-cnt
    stdin_open: true
    command: sh -c "yarn install && yarn start"
    working_dir: /app
    volumes:
      - "./app/node:/app"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.node.rule=Host(`node.docker-app.fr`)"
      - "traefik.http.routers.node.entrypoints=web"

  php-service:
    build:
      context: .
      dockerfile: ./docker/php/Dockerfile
    restart: unless-stopped
    container_name: php-cnt
    stdin_open: true
    volumes:
      - "./app/symfony:/app"
 
  nginx-service:
    image: nginx:stable
    restart: unless-stopped
    container_name: nginx-cnt
    volumes:
      - "./app/symfony:/app"
      - "./.conf/nginx/symfony.conf:/etc/nginx/conf.d/default.conf"
      - "./.tmp/logs/nginx/app_access.log:/var/log/nginx/app_access.log"
      - "./.tmp/logs/nginx/app_error.log:/var/log/nginx/app_error.log"
    depends_on:
      - php-service
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.nginx.rule=Host(`symfony.docker-app.fr`)"
      - "traefik.http.routers.nginx.entrypoints=web"

  db-service:
    image: mariadb:10.9.3
    restart: unless-stopped
    container_name: db-cnt
    environment:
      MARIADB_ROOT_PASSWORD: root

  pma-service:
    image: phpmyadmin/phpmyadmin
    restart: unless-stopped
    container_name: pma-cnt
    environment:
      PMA_HOST: db-service
    depends_on:
      - db-service
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.pma.rule=Host(`pma.docker-app.fr`)"
      - "traefik.http.routers.pma.entrypoints=web"

  redis-service:
    image: redis:7.0-alpine
    restart: unless-stopped
    command: redis-server --save 20 1 --loglevel warning --requirepass eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81
    volumes: 
      - ./.tmp/cache/redis:/data
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.redis.rule=Host(`redis.docker-app.fr`)"
      - "traefik.http.routers.redis.entrypoints=web"

  mailcatcher-service:
    image: dockage/mailcatcher:0.8.2
    restart: unless-stopped
    container_name: mailcatcher-cnt
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.mail.rule=Host(`mail.docker-app.fr`)"
      - "traefik.http.routers.mail.entrypoints=web"
      - "traefik.http.services.mail.loadbalancer.server.port=1080"

  traefik:
    image: "traefik:v2.6"
    command:
      #- "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"